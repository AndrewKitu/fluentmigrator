// ***********************************************************************
// Assembly         : FluentMigrator.DotNet.Cli
// Author           : eivin
// Created          : 10-10-2019
//
// Last Modified By : eivin
// Last Modified On : 10-10-2019
// ***********************************************************************
// <copyright file="ConnectionCommand.cs" company="FluentMigrator Project">
//     Sean Chambers and the FluentMigrator project 2008-2018
// </copyright>
// <summary></summary>
// ***********************************************************************
#region License
// Copyright (c) 2007-2018, Sean Chambers and the FluentMigrator Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
#endregion

using System.ComponentModel.DataAnnotations;

using McMaster.Extensions.CommandLineUtils;

// ReSharper disable UnassignedGetOnlyAutoProperty

namespace FluentMigrator.DotNet.Cli.Commands
{
    /// <summary>
    /// Class ConnectionCommand.
    /// Implements the <see cref="FluentMigrator.DotNet.Cli.Commands.MigrationCommand" />
    /// </summary>
    /// <seealso cref="FluentMigrator.DotNet.Cli.Commands.MigrationCommand" />
    public class ConnectionCommand : MigrationCommand
    {
        /// <summary>
        /// Gets the connection string.
        /// </summary>
        /// <value>The connection string.</value>
        [Option("-c|--connection <CONNECTION_STRING_OR_NAME>", Description = "The name of the connection string (falls back to machine name) or the connection string itself to the server and database you want to execute your migrations against.")]
        public string ConnectionString { get; }

        /// <summary>
        /// Gets a value indicating whether [no connection].
        /// </summary>
        /// <value><c>true</c> if [no connection]; otherwise, <c>false</c>.</value>
        [Option("--no-connection", Description = "Indicates that migrations will be generated without consulting a target database. Should only be used when generating an output file.")]
        public bool NoConnection { get; }

        /// <summary>
        /// Gets the type of the processor.
        /// </summary>
        /// <value>The type of the processor.</value>
        [Option("-p|--processor <PROCESSOR_NAME>", Description = "The kind of database you are migrating against. Available choices can be shown with \"list processors\".")]
        [Required]
        public string ProcessorType { get; }

        /// <summary>
        /// Gets the processor switches.
        /// </summary>
        /// <value>The processor switches.</value>
        [Option("-s|--processor-switches <PROCESSOR_SWITCHES>", Description = "Provider specific switches.")]
        public string ProcessorSwitches { get; }

        /// <summary>
        /// Gets a value indicating whether this <see cref="ConnectionCommand"/> is preview.
        /// </summary>
        /// <value><c>true</c> if preview; otherwise, <c>false</c>.</value>
        [Option("--preview", Description = "Only output the SQL generated by the migration - do not execute it. Default is false.")]
        public bool Preview { get; }

        /// <summary>
        /// Gets a value indicating whether this <see cref="ConnectionCommand"/> is verbose.
        /// </summary>
        /// <value><c>true</c> if verbose; otherwise, <c>false</c>.</value>
        [Option("-V|--verbose", Description = "Show the SQL statements generated and execution time in the console. Default is false.")]
        public bool Verbose { get; }

        /// <summary>
        /// Gets the profile.
        /// </summary>
        /// <value>The profile.</value>
        [Option("--profile <PROFILE>", Description = "The profile to run after executing migrations.")]
        public string Profile { get; }

        /// <summary>
        /// Gets the context.
        /// </summary>
        /// <value>The context.</value>
        [Option("--context <CONTEXT>", Description = "Set ApplicationContext to the given string.")]
        public string Context { get; }

        /// <summary>
        /// Gets the timeout.
        /// </summary>
        /// <value>The timeout.</value>
        [Option("--timeout <TIMEOUT_SEC>", Description = "Overrides the default database command timeout of 30 seconds.")]
        public int Timeout { get; }

        /// <summary>
        /// Gets the output.
        /// </summary>
        /// <value>The output.</value>
        [Option("-o|--output=<FILENAME>", CommandOptionType.SingleOrNoValue, Description = "Output generated SQL to a file. Default is no output. A filename may be specified, otherwise [targetAssemblyName].sql is the default.")]
        public (bool, string) Output { get; }
    }
}
